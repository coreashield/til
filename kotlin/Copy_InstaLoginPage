package com.example.login

import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.clickable
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Row
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.fillMaxHeight
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.layout.width
import androidx.compose.material3.Button
import androidx.compose.material3.Divider
import androidx.compose.material3.OutlinedTextField
import androidx.compose.material3.Text
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.runtime.setValue
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.graphics.RectangleShape
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.text.style.TextAlign
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.login.ui.theme.LoginTheme

class PracticeActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            LoginTheme {
                Column {
                    ImgView()
                    Text(text = "hi")
                    Text(text = "hi")
                }
            }
        }
    }

    @Composable
    fun MainScreen() {

        Column(
            modifier = Modifier
                .fillMaxHeight()
                .padding(10.dp),
            horizontalAlignment = Alignment.CenterHorizontally
        )
        {
            Text(
                text = "English â–½",
                modifier = Modifier.clickable(onClick = {/*TODO*/ }),
                fontSize = 8.sp,
                color = Color.Gray
            )

            ImgView()

            Button(
                modifier = Modifier
                    .fillMaxWidth()
                    .size(170.dp, 28.dp),
                shape = RectangleShape,
                onClick = { /*TODO*/ }) {
                Text(text = "Continue with Facebook", fontSize = 10.sp)
            }

            Row(
                modifier = Modifier
                    .padding(10.dp, 10.dp)
            ) {
                Divider(
                    modifier = Modifier
                        .width(60.dp)
                        .padding(top = 7.dp),
                    color = Color.Gray,
                    thickness = 1.dp
                )

                Text(
                    text = "or",
                    fontSize = 10.sp,
                    color = Color.Black.copy(alpha = 0.4f),
                    modifier = Modifier
                        .padding(start = 7.dp)
                )

                Divider(
                    modifier = Modifier
                        .fillMaxWidth()
                        .padding(start = 7.dp, top = 7.dp),
                    color = Color.Gray,
                    thickness = 1.dp
                )
            }

            InputTextField(varInput = "id", hint = "phone number,username, or email")
            InputTextField(varInput = "pw", hint = "password")

            Text(
                text = "Forgot password?",
                fontSize = 7.sp,
                color = Color.Blue,
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(top = 2.dp),
                textAlign = TextAlign.Right
            )

            Button(
                enabled = false,
                modifier = Modifier
                    .fillMaxWidth()
                    .padding(top = 10.dp)
                    .size(170.dp, 28.dp),
                shape = RectangleShape,
                onClick = { /*TODO*/ },
            ) {
                Text(text = "Log in", fontSize = 10.sp, color = Color.White)
            }

            Row(
                modifier = Modifier
                    .padding(top = 5.dp)
            ) {
                Text(
                    text = "Don't have an account?",
                    fontSize = 8.sp,
                    color = Color.Gray
                )

                Text(
                    text = "sign up",
                    fontWeight = FontWeight.Bold,
                    fontSize = 8.sp,
                    color = Color.Blue
                )
            }

            Column(
                modifier = Modifier
                    .fillMaxHeight()
                    .fillMaxWidth(),
                horizontalAlignment = Alignment.CenterHorizontally
            ) {
                Spacer(modifier = Modifier.weight(1f))

                Text(text = "from", fontSize = 8.sp, color = Color.Gray)
                Text(text = "FACEBOOK", fontSize = 12.sp)
            }
        }
    }

    @Preview(showBackground = true, widthDp = 180, heightDp = 400)
    @Composable
    fun MainScreenPreview() {
        LoginTheme {
            MainScreen()
        }
    }

    @Composable
    fun ImgView() {
        Image(
            painter = painterResource(id = R.drawable.instagram_logo),
            contentDescription = null,

            modifier = Modifier
                .fillMaxWidth()
                .height(50.dp)
        )
    }
}

@Composable
fun InputTextField(varInput: String, hint: String) {

    var varInput by remember {
        mutableStateOf("")
    }

    OutlinedTextField(
        modifier = Modifier
            .fillMaxWidth()
            .padding(top = 5.dp)
            .height(41.dp),
        value = varInput,
        onValueChange = {
            varInput = it
        },
        placeholder = {
            Text(
                hint,
                fontSize = 7.sp,
                color = Color.Gray
            )
        },
    )
}
